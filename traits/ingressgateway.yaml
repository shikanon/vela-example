
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  name: ingressgateway
  namespace: vela-system
  annotations:
    definition.oam.dev/description: "ingressgateway is a istio route rule, help external application access cluster application"
spec:
  appliesToWorkloads:
    - deployments.apps
  schematic:
    cue:
      template: |
        outputs: virtualservice: {
          apiVersion: "networking.istio.io/v1beta1"
          kind:       "VirtualService"
          metadata: {
            name: context.name
          }
          spec: {
            gateways: [parameter.gateway]
            hosts: parameter.hosts
            if parameter.protocol == "tcp" {
              tcp: [{
                match: [{
                  port: parameter.gatewayport
                }]
                route: [{
                  destination: {
                    host: "\(context.name).\(context.namespace).svc.cluster.local"
                    port: number: parameter.exportport
                  }
                }]
              }]
            }
            if parameter.protocol != "tcp" {
              http: [{
                route: [{
                  destination: {
                    host: "\(context.name).\(context.namespace).svc.cluster.local"
                    port: number: parameter.exportport
                  }
                }]
              }]
            }
          }
        }
        parameter: {
          gateway: string
          hosts: [...string]
          // +usage=the service to export port in all ports
          exportport: int
          protocol: *"http" | string
          // +usage=If set "tcp", must to set gatewayport
          gatewayport?: *80 | int
        }

